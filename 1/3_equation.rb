#
# Квадратное уравнение.
#
# Пользователь вводит 3 коэффициента a, b и с.
# Программа вычисляет дискриминант (D) и корни уравнения (x1 и x2, если они есть)
# и выводит значения дискриминанта и корней на экран.
# При этом возможны следующие варианты:
#   Если D > 0, то выводим дискриминант и 2 корня
#   Если D = 0, то выводим дискриминант и 1 корень (т.к. они в этом случае равны)
#   Если D < 0, то выводим дискриминант и сообщение "Корней нет"
# Подсказка: Алгоритм решения с блок-схемой (www.bolshoyvopros.ru).
# Для вычисления квадратного корня, нужно использовать Math.sqrt
# Например, Math.sqrt(16) вернет 4, т.е. квадратный корень из 16.

puts "Введите три коэфициента (a, b и c) через пробел"
split = gets.chomp

raise "Только цифры и пробелы!" unless split =~ /[0-9\s]/i
split = split.split(' ').map &:to_f
raise "Только три коэффициента!" unless split.size == 3
raise "a != 0" if split.first.zero?

a, b, c = *split
d = b**2 - 4 * a * c
equation_roots = ->(meth) { (-b.send(meth, Math.sqrt(d))) / (2 * a) }

roots = []
if d > 0
  roots << equation_roots.call(:+)
  roots << equation_roots.call(:-)
elsif d == 0
  roots << equation_roots.call(:+)
end

root_msgs = ["корень: ", "корни: ", "корней нет"]
msg = root_msgs[d<=>0]
puts "Дискриминант: #{d}, #{msg}#{roots * ' и '}."
